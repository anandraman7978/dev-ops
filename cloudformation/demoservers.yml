Parameters:
    EnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String
    InstanceType:
        Description: 
            
            "The EC2 instance type - General Purpose
            Use Cases: Micro-services, low-latency interactive applications, 
            small and medium databases, virtual desktops, development environments, 
            code repositories, and business-critical applications"
        
        Type: String
        Default: t3.medium
        AllowedValues: [t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
        ConstraintDescription: must select a valid general purpose instance type.
    DiskSize:
        Description: Disk size in GB
        Type: Number
        Default: 10

Resources:
    LbSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription: Allow http to client host
          VpcId:
            Fn::ImportValue:  !Sub "${EnvironmentName}-VPCID"  
          SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
    WebServerSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription: Allow http to our host and SSH from local Only
          VpcId:
            Fn::ImportValue:  !Sub "${EnvironmentName}-VPCID" 
          SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 0
            ToPort: 65535
            CidrIp: 0.0.0.0/0
    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          UserData:
            Fn::Base64: !Sub |
              #!/bin/bash
              sudo apt-get update -y
              sudo apt-get install unzip awscli -y
              sudo apt-get install apache2 -y
              sudo systemctl start apache2.service
              cd /var/www/html
              sudo rm index.html
              sudo wget -P . http://udacity-demo-1-1.s3-website-us-west-2.amazonaws.com/index.html
          ImageId: ami-005bdb005fb00e791
          SecurityGroups:
          - Ref: WebServerSecGroup
          InstanceType: !Ref 'InstanceType'
          BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: !Ref 'DiskSize'
    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
          VPCZoneIdentifier:
          - Fn::ImportValue:  !Sub "${EnvironmentName}-PRVT-NETS"
          LaunchConfigurationName:
            Ref: WebAppLaunchConfig
          MinSize: '3'
          MaxSize: '5'
          TargetGroupARNs:
          - Ref: WebAppTargetGroup
    WebAppLB:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties: 
        Subnets: 
        - Fn::ImportValue:  !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue:  !Sub "${EnvironmentName}-PUB2-SN"
        SecurityGroups: 
        - Ref: LbSecGroup
    Listener:
       Type: "AWS::ElasticLoadBalancingV2::Listener"
       Properties:
         DefaultActions:
           - Type: forward
             TargetGroupArn: !Ref WebAppTargetGroup
         LoadBalancerArn: !Ref WebAppLB
         Port: 80
         Protocol: "HTTP"

    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
          Actions:
            - Type: forward
              TargetGroupArn: !Ref WebAppTargetGroup
          Conditions:
            - Field: path-pattern
              Values: [/]
          ListenerArn: !Ref 'Listener'
          Priority: 1
    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
          HealthCheckIntervalSeconds: 35
          HealthCheckPath: /
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 30
          HealthyThresholdCount: 2
          Port: 80
          Protocol: HTTP
          UnhealthyThresholdCount: 5
          VpcId: 
            Fn::ImportValue:
              Fn::Sub: "${EnvironmentName}-VPCID"
Outputs:
    WebAppLoadBalancerDNSName:
        Description: DNS name or Public URL of the Load Balancer
        Value: !Join [ "", [ 'http://', !GetAtt WebAppLB.DNSName ]]
        Export:
            Name: !Sub ${EnvironmentName}-LB-DNSName